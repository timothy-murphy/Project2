#define _GNU_SOURCE
#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

int input(char *s,int length);

int main()
{
    while(1){//begining of while loop
    char dir[100];
    char *buffer;
    size_t bufsize = 32;
    size_t characters;
    const char s[2] = "\n";//this is the space between the inputs. 
    char *token; 
  
    buffer = (char *)malloc(bufsize * sizeof(char));
    if( buffer == NULL)
    {
        perror("Unable to run stuff");
        exit(1);
    }
    printf("fsh>");

    
    characters = getline(&buffer,&bufsize,stdin);
   token = strtok(buffer, s);
   
   /* walk through other tokens */
   while( token != NULL ) {
      //printf( " %s\n", token );
    if(strcmp(token, "exit") == 0){
        exit(0);
    }
    if (strcmp(token, "cd") ==0){
        char *token2 = strtok(NULL, " \n");
        chdir(token2);
        printf("%s\n", getcwd(dir, 100));
    }
    else{

        pid_t child_pid = fork();
       if (child_pid == -1)
           perror("fork");
       else if (child_pid == 0)
           {
           execlp(token, token, (char *)NULL);
            }
    }
      token = strtok(NULL, " \n");
   }

    }
    return(0);
}



